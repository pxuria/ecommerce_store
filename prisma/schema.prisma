// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id         Int      @id @default(autoincrement())
  firstName  String   @map("first_name")
  lastName   String   @map("last_name")
  email      String   @unique
  phone      String   @unique
  password   String
  role       UserRole @default(USER)
  address    String?
  city       String?
  postalCode String?  @map("postal_code")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model ProductCategory {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  slug     String    @unique
  products Product[]
}

model ProductBrand {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  slug     String    @unique
  products Product[]
}

model ProductCountry {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  slug     String    @unique
  products Product[]
}

model ProductColor {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  hex      String?
  products Product[]
}

model Product {
  id              Int                @id @default(autoincrement())
  name            String
  slug            String             @unique
  description     String?
  pricePerMeter   Decimal            @db.Decimal(12, 2)
  discountPercent Decimal?           @db.Decimal(5, 2)
  stockMeters     Decimal            @default(0) @db.Decimal(12, 3)
  countryOfOrigin String?
  categoryId      Int
  category        ProductCategory    @relation(fields: [categoryId], references: [id])
  countryId       Int?
  country         ProductCountry?    @relation(fields: [countryId], references: [id])
  brandId         Int?
  brand           ProductBrand?      @relation(fields: [brandId], references: [id])
  images          ProductImage[]
  attributes      ProductAttribute[]
  colors          ProductColor[]
  isActive        Boolean            @default(true)
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt

  @@index([name])
  @@index([slug])
  @@index([categoryId])
  @@index([brandId])
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  alt       String?
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@index([productId])
}

model ProductAttribute {
  id        Int     @id @default(autoincrement())
  key       String
  value     String
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@index([productId, key])
  @@index([key])
}

model Blog {
  id                  Int      @id @default(autoincrement())
  title               String
  slug                String   @unique
  content             String
  coverImage          String
  estimatedTimeToRead Int
  metaTitle           String?
  metaDescription     String?
  metaKeywords        String?
  isPublished         Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@index([slug])
}
