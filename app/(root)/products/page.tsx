import { Metadata } from "next";
import CustomPagination from "@/components/shared/CustomPagination";
import ProductCard from "@/components/shared/ProductCard";
import Filter from "@/components/shared/Filter";
import axiosInstance from "@/lib/axiosInstance";
import ProductsFilters from "@/components/shared/ProductsFilters";
import { IProduct } from "@/types";
import NoProduct from "@/components/shared/NoProduct";

export const metadata: Metadata = {
  title: "محصولات",
  description: "Generated by create next app",
};

async function fetchProducts(searchParams: Record<string, string | undefined>) {
  try {
    const filteredParams: Record<string, string> = Object.fromEntries(
      Object.entries(searchParams)
        .filter(([, value]) => value !== undefined)
        .map(([key, value]) => [key, value as string])
    );

    const query = new URLSearchParams(filteredParams).toString();
    const { data } = await axiosInstance.get(`products?${query}`);
    return data;
  } catch (error) {
    console.log("Error fetching products:", error);
    return { data: [], pagination: {} };
  }
}

const page = async ({
  searchParams,
}: {
  searchParams: Record<string, string | undefined>;
}) => {
  const response = await fetchProducts(searchParams);

  const loadedProducts = response?.data || [];
  const pagination = response?.pagination || {};
  const showFilters = searchParams.showFilters === "true";
  console.log(loadedProducts);

  return (
    <section className="px-4 sm:px-8 mt-10 min-h-[85vh] flex-column items-center justify-between">
      <div className="w-full flex items-start justify-center gap-4 flex-nowrap">
        {showFilters && (
          <div className="w-1/4">
            <Filter />
          </div>
        )}

        <div
          className={`flex items-center justify-end gap-4 flex-wrap ${
            showFilters ? "w-3/4" : "w-full"
          }`}
        >
          <ProductsFilters />

          {loadedProducts.length ? (
            loadedProducts?.map((item: IProduct) => (
              <div
                className={`w-[calc(50%-16px)] ${
                  showFilters
                    ? "md:w-[calc(33%-16px)]"
                    : "min-[900px]:w-[calc(33%-16px)] xl:w-[calc(25%-16px)]"
                }`}
                key={item._id}
              >
                <ProductCard
                  imgSrc={item.image[0]}
                  imgAlt={item.name}
                  imgWidth={1500}
                  imgHeight={900}
                  title={item.name}
                  stock={item.stock}
                  price={item.basePrice}
                  link={item._id}
                />
              </div>
            ))
          ) : (
            <NoProduct />
          )}
        </div>
      </div>

      <CustomPagination pagination={pagination} />
    </section>
  );
};

export default page;
